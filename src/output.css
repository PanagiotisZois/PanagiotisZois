/*! tailwindcss v4.0.6 | MIT License | https://tailwindcss.com */
.flex {
  display: flex;
}
.hidden {
  display: none;
}
.h-screen {
  height: 100vh;
}
.transform {
  transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z)
    var(--tw-skew-x) var(--tw-skew-y);
}
.items-center {
  align-items: center;
}
.justify-center {
  justify-content: center;
}
.scroll-smooth {
  scroll-behavior: smooth;
}
.bg-gradient-to-t {
  --tw-gradient-position: to top in oklab;
  background-image: linear-gradient(var(--tw-gradient-stops));
}
::-webkit-scrollbar {
  width: 12px;
}
::-webkit-scrollbar-track {
  background: #ebebeb;
}
::-webkit-scrollbar-thumb {
  background-color: #004b4b59;
  border-radius: 5px;
  border: 3px solid #ffffff;
}
::-webkit-scrollbar-thumb:hover {
  background: #004b4b;
}
body {
  overflow-x: hidden;
}
#cta {
  background-image: url("../images/bg-boost-desktop.svg");
  background-repeat: no-repeat;
  background-size: cover;
}
.ficon:hover {
  filter: invert(79%) sepia(61%) saturate(464%) hue-rotate(130deg)
    brightness(89%) contrast(85%);
}
.hamburger {
  cursor: pointer;
  width: 24px;
  height: 24px;
  transition: all 0.25s;
  position: relative;
}
.hamburger-top,
.hamburger-middle,
.hamburger-bottom {
  content: "";
  position: absolute;
  width: 24px;
  height: 3px;
  top: 0;
  left: 0;
  background: #9c9aa6;
  transform: rotate(0);
  transition: all 0.5s;
}
.hamburger-middle {
  transform: translateY(7px);
}
.hamburger-bottom {
  transform: translateY(14px);
}
.open {
  transform: rotate(90deg);
  transform: translateY(0px);
}
.open .hamburger-top {
  transform: rotate(45deg) translateY(6px) translateX(6px);
}
.open .hamburger-middle {
  display: none;
}
.open .hamburger-bottom {
  transform: rotate(-45deg) translateY(6px) translateX(-6px);
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}
